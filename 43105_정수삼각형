#include <string>
#include <vector>
#include <iostream>
#include <algorithm>

using namespace std;

int MAX[500][500]; // MAX[3][0] => 3번째 줄의 0번째 노드에서의 최대 값

int solution(vector<vector<int>> triangle){
    int answer = 0; 
    int N = triangle.size();
    
    MAX[0][0] = triangle[0][0];
    
    for(int i=1; i<N; i++){
        MAX[i][0] = MAX[i-1][0] + triangle[i][0]; //각 줄의 0번째는 윗줄의 0번째 노드에서만 접근 가능
        // cout<<MAX[i][0]<<" ";
        
        for(int j=1; j<=i; j++){
            if(j == i){
                MAX[i][i] = MAX[i-1][i-1] + triangle[i][i];  //각 줄의 마지막 노드는 윗줄의 마지막 노드에서만 접근 가능
                // cout<<MAX[i][j]<<" ";
                continue;
            }
            MAX[i][j] = max(MAX[i-1][j-1], MAX[i-1][j]) + triangle[i][j];
            // cout<<MAX[i][j]<<" ";
        }
        cout<<endl;
        if(i == triangle.size() - 1){ 
            answer = *max_element(MAX[i], MAX[i] + N);
            // cout<<"answer "<<answer<<endl;
        }
    }
    return answer;
}
